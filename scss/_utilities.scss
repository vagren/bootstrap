// Utilities

$utilities: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$utilities: map-merge(
  (
    "align": (
      property: vertical-align,
      class: align,
      values: baseline top middle bottom text-bottom text-top
    ),
    "float": (
      responsive: true,
      property: float,
      values: (
        start: left,
        end: right,
        none: none,
      )
    ),
    "overflow": (
      property: overflow,
      values: auto hidden,
    ),
    "display": (
      responsive: true,
      print: true,
      property: display,
      class: d,
      values: none inline inline-block block table table-row table-cell flex inline-flex
    ),
    "shadow": (
      property: box-shadow,
      class: shadow,
      values: (
        null: $box-shadow,
        sm: $box-shadow-sm,
        lg: $box-shadow-lg,
        none: none,
      )
    ),
    "position": (
      property: position,
      values: static relative absolute fixed sticky
    ),
    "border": (
      property: border,
      values: (
        null: $border-width solid $border-color,
        0: 0,
      )
    ),
    "border-block-start": (
      property: border-top,
      class: border-bs,
      values: (
        null: $border-width solid $border-color,
        0: 0,
      )
    ),
    "border-inline-end": (
      property: border-right,
      class: border-ie,
      values: (
        null: $border-width solid $border-color,
        0: 0,
      )
    ),
    "border-block-end": (
      property: border-bottom,
      class: border-be,
      values: (
        null: $border-width solid $border-color,
        0: 0,
      )
    ),
    "border-inline-start": (
      property: border-left,
      class: border-is,
      values: (
        null: $border-width solid $border-color,
        0: 0,
      )
    ),
    "border-color": (
      property: border-color,
      class: border,
      values: map-merge($theme-colors, ("white": $white))
    ),
    // Sizing utilities
    "inline-size": (
      property: width,
      class: is,
      values: (
        25: 25%,
        50: 50%,
        75: 75%,
        100: 100%,
        auto: auto
      )
    ),
    "max-inline-size": (
      property: max-width,
      class: max-is,
      values: (100: 100%)
    ),
    "viewport-width": (
      property: width,
      class: vw,
      values: (100: 100vw)
    ),
    "min-viewport-width": (
      property: min-width,
      class: min-vw,
      values: (100: 100vw)
    ),
    "block-size": (
      property: height,
      class: bs,
      values: (
        25: 25%,
        50: 50%,
        75: 75%,
        100: 100%,
        auto: auto
      )
    ),
    "max-block-size": (
      property: max-height,
      class: max-bs,
      values: (100: 100%)
    ),
    "viewport-height": (
      property: height,
      class: vh,
      values: (100: 100vh)
    ),
    "min-viewport-height": (
      property: min-height,
      class: min-vh,
      values: (100: 100vh)
    ),
    // Flex utilities
    "flex": (
      responsive: true,
      property: flex,
      values: (fill: 1 1 auto)
    ),
    "flex-direction": (
      responsive: true,
      property: flex-direction,
      class: flex,
      values: row column row-reverse column-reverse
    ),
    "flex-grow": (
      responsive: true,
      property: flex-grow,
      class: flex,
      values: (
        grow-0: 0,
        grow-1: 1,
      )
    ),
    "flex-shrink": (
      responsive: true,
      property: flex-shrink,
      class: flex,
      values: (
        shrink-0: 0,
        shrink-1: 1,
      )
    ),
    "flex-wrap": (
      responsive: true,
      property: flex-wrap,
      class: flex,
      values: wrap nowrap wrap-reverse
    ),
    "justify-content": (
      responsive: true,
      property: justify-content,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
        evenly: space-evenly,
      )
    ),
    "align-items": (
      responsive: true,
      property: align-items,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        baseline: baseline,
        stretch: stretch,
      )
    ),
    "align-content": (
      responsive: true,
      property: align-content,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
        stretch: stretch,
      )
    ),
    "align-self": (
      responsive: true,
      property: align-self,
      values: (
        auto: auto,
        start: flex-start,
        end: flex-end,
        center: center,
        baseline: baseline,
        stretch: stretch,
      )
    ),
    "order": (
      responsive: true,
      property: order,
      values: (
        first: -1,
        0: 0,
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
        last: 6,
      ),
    ),
    // Margin utilities
    "margin": (
      responsive: true,
      property: margin,
      class: m,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-inline": (
      responsive: true,
      property: margin-right margin-left,
      class: mi,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-block": (
      responsive: true,
      property: margin-top margin-bottom,
      class: mb,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-block-start": (
      responsive: true,
      property: margin-top,
      class: mbs,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-inline-end": (
      responsive: true,
      property: margin-right,
      class: mie,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-block-end": (
      responsive: true,
      property: margin-bottom,
      class: mbe,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-inline-start": (
      responsive: true,
      property: margin-left,
      class: mis,
      values: map-merge($spacers, (auto: auto))
    ),
    // Negative margin utilities
    "negative-margin": (
      responsive: true,
      property: margin,
      class: m,
      values: $negative-spacers
    ),
    "negative-margin-inline": (
      responsive: true,
      property: margin-right margin-left,
      class: mi,
      values: $negative-spacers
    ),
    "negative-margin-block": (
      responsive: true,
      property: margin-top margin-bottom,
      class: mb,
      values: $negative-spacers
    ),
    "negative-margin-block-start": (
      responsive: true,
      property: margin-top,
      class: mbs,
      values: $negative-spacers
    ),
    "negative-margin-inline-end": (
      responsive: true,
      property: margin-right,
      class: mie,
      values: $negative-spacers
    ),
    "negative-margin-block-end": (
      responsive: true,
      property: margin-bottom,
      class: mbe,
      values: $negative-spacers
    ),
    "negative-margin-inline-start": (
      responsive: true,
      property: margin-left,
      class: mis,
      values: $negative-spacers
    ),
    // Padding utilities
    "padding": (
      responsive: true,
      property: padding,
      class: p,
      values: $spacers
    ),
    "padding-inline": (
      responsive: true,
      property: padding-right padding-left,
      class: pi,
      values: $spacers
    ),
    "padding-block": (
      responsive: true,
      property: padding-top padding-bottom,
      class: pb,
      values: $spacers
    ),
    "padding-block-start": (
      responsive: true,
      property: padding-top,
      class: pbs,
      values: $spacers
    ),
    "padding-inline-end": (
      responsive: true,
      property: padding-right,
      class: pie,
      values: $spacers
    ),
    "padding-block-end": (
      responsive: true,
      property: padding-bottom,
      class: pbe,
      values: $spacers
    ),
    "padding-inline-start": (
      responsive: true,
      property: padding-left,
      class: pis,
      values: $spacers
    ),
    // Text
    "font-weight": (
      property: font-weight,
      values: (
        light: $font-weight-light,
        lighter: $font-weight-lighter,
        normal: $font-weight-normal,
        bold: $font-weight-bold,
        bolder: $font-weight-bolder
      )
    ),
    "text-transform": (
      property: text-transform,
      class: text,
      values: lowercase uppercase capitalize
    ),
    "text-align": (
      responsive: true,
      property: text-align,
      class: text,
      values: (
        start: left,
        end: right,
        center: center,
      )
    ),
    "color": (
      property: color,
      class: text,
      values: map-merge(
        $theme-colors,
        (
          "white": $white,
          "body": $body-color,
          "muted": $text-muted,
          "black-50": rgba($black, .5),
          "white-50": rgba($white, .5),
          "reset": inherit,
        )
      )
    ),
    "line-height": (
      property: line-height,
      class: lh,
      values: (
        1: 1,
        sm: $line-height-sm,
        base: $line-height-base,
        lg: $line-height-lg,
      )
    ),
    "background-color": (
      property: background-color,
      class: bg,
      values: map-merge(
        $theme-colors,
        (
          "body": $body-bg,
          "white": $white,
          "transparent": transparent
        )
      )
    ),
    "gradient": (
      property: background-image,
      class: bg,
      values: (gradient: var(--bs-gradient))
    ),
    "white-space": (
      property: white-space,
      class: text,
      values: (
        wrap: normal,
        nowrap: nowrap,
      )
    ),
    "text-decoration": (
      property: text-decoration,
      values: none underline line-through
    ),
    "font-style": (
      property: font-style,
      class: font,
      values: italic normal
    ),
    "word-wrap": (
      property: word-wrap word-break,
      class: text,
      values: (break: break-word)
    ),
    "font-family": (
      property: font-family,
      class: font,
      values: (monospace: var(--bs-font-monospace))
    ),
    "user-select": (
      property: user-select,
      values: all auto none
    ),
    "pointer-events": (
      property: pointer-events,
      class: pe,
      values: none auto,
    ),
    "rounded": (
      property: border-radius,
      class: rounded,
      values: (
        null: $border-radius,
        sm: $border-radius-sm,
        lg: $border-radius-lg,
        circle: 50%,
        pill: $rounded-pill,
        0: 0,
      )
    ),
    "rounded-block-start": (
      property: border-top-left-radius border-top-right-radius,
      class: rounded-bs,
      values: (null: $border-radius)
    ),
    "rounded-inline-end": (
      property: border-top-right-radius border-bottom-right-radius,
      class: rounded-ie,
      values: (null: $border-radius)
    ),
    "rounded-block-end": (
      property: border-bottom-right-radius border-bottom-left-radius,
      class: rounded-be,
      values: (null: $border-radius)
    ),
    "rounded-inline-start": (
      property: border-bottom-left-radius border-top-left-radius,
      class: rounded-is,
      values: (null: $border-radius)
    ),
    "visibility": (
      property: visibility,
      class: null,
      values: (
        visible: visible,
        invisible: hidden,
      )
    )
  ),
  $utilities
);
